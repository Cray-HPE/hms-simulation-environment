#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
version: '3.7'
networks:
  simulation:
services:
  #
  # Vault
  # 
  vault:
    hostname: vault
    image: artifactory.algol60.net/docker.io/library/vault:1.5.5
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=hms
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
      - VAULT_ADDR=http://127.0.0.1:8200
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    networks:
      - simulation
  vault-kv-enabler:
    image: artifactory.algol60.net/csm-docker/stable/vault-kv-enabler:1.13.4
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - KV_STORES=secret
    networks:
      - simulation
    profiles:
      - do-not-start-automatically
  #
  # Kafka
  #
  cray-shared-kafka-zookeeper:
    image: artifactory.algol60.net/docker.io/confluentinc/cp-zookeeper:6.1.1
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - simulation
  cray-shared-kafka:
    image: artifactory.algol60.net/docker.io/confluentinc/cp-kafka:6.1.1
    hostname: kafka
    depends_on:
      - cray-shared-kafka-zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - simulation
  #
  # S3
  #
  s3:
    image: artifactory.algol60.net/docker.io/minio/minio:latest
    hostname: s3
    environment:
      MINIO_ACCESS_KEY: s3-access-key
      MINIO_SECRET_KEY: s3-secret-key
    command: server /data
    ports:
      - "9000:9000"
  # TODO figure how to deal with buckets, this should maybe be done with the standup 
  # script
  # s3-init:
  #   image: artifactory.algol60.net/docker.io/minio/mc:latest
  #   hostname: s3-init
  #   environment:
  #     - MC_HOST_S3=http://s3-access-key:s3-secret-key@s3:9000
  #   command:  mb S3/sls
  #   depends_on:
  #     - s3

  #
  # SLS
  #
  cray-sls-postgres:
    hostname: sls-postgres
    image: artifactory.algol60.net/docker.io/library/postgres:11-alpine
    environment:
      - POSTGRES_USER=slsuser
      - POSTGRES_DB=sls
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "54321:5432"
    networks:
      - simulation
  cray-sls-init:
    image: artifactory.algol60.net/csm-docker/stable/cray-sls:2.0.0
    command: ["sls-init"]
    environment:
      - POSTGRES_HOST=sls-postgres
      - DBOPTS=sslmode=disable
      - DBUSER=slsuser
    depends_on:
      - cray-sls-postgres
    networks:
      - simulation
  cray-sls:
    image: artifactory.algol60.net/csm-docker/stable/cray-sls:2.0.0
    environment:
      - POSTGRES_HOST=cray-sls-postgres
      - DBOPTS=sslmode=disable
      - DBUSER=slsuser
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=secret/hms-creds
    ports:
      - "8376:8376"
    depends_on:
      - cray-sls-postgres
      - cray-sls-init
    networks:
      - simulation
  #
  # HSM
  #
  cray-smd-postgres:
    hostname: hmsds-postgres
    image: artifactory.algol60.net/docker.io/library/postgres:11-alpine
    environment:
      - POSTGRES_PASSWORD=hmsdsuser
      - POSTGRES_USER=hmsdsuser
      - POSTGRES_DB=hmsds
    ports:
      - "54322:5432"
    networks:
      - simulation
  cray-smd-init:
    image: artifactory.algol60.net/csm-docker/stable/cray-smd:2.2.0
    environment:
      - SMD_DBHOST=cray-smd-postgres
      - SMD_DBPORT=5432
    depends_on:
      - cray-smd-postgres
    networks:
      - simulation
    command: /entrypoint.sh smd-init
  cray-smd:
    image: artifactory.algol60.net/csm-docker/stable/cray-smd:2.2.0
    environment:
      - POSTGRES_HOST=cray-smd-postgres
      - SMD_DBHOST=cray-smd-postgres
      - POSTGRES_PORT=5432
      - RF_MSG_HOST=cray-shared-kafka:9092:cray-dmtf-resource-event
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=secret/hms-creds
      - SMD_WVAULT=true
      - SMD_RVAULT=true
      - SMD_SLS_HOST=http://cray-sls:8376/v1
      - SMD_HBTD_HOST=http://cray-hbtd:28500/hmi/v1
    hostname: cray-smd
    depends_on:
      - cray-smd-init
    ports:
      - "27779:27779"
    networks:
      - simulation
  #
  # MEDS
  #
  cray-meds-vault-loader:
    image: artifactory.algol60.net/csm-docker/stable/cray-meds:1.20.0
    environment:
      CRAY_VAULT_AUTH_PATH: auth/token/create
      CRAY_VAULT_ROLE_FILE: configs/namespace
      CRAY_VAULT_JWT_FILE: configs/token
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: hms
      VAULT_KEYPATH: secret/hms-creds
    env_file:
      - configs/cray-meds-vault-loader.env
    command: vault_loader
    volumes:
      - ./configs:/configs
    networks:
      - simulation
    profiles:
      - do-not-start-automatically
  cray-meds:
    image: artifactory.algol60.net/csm-docker/stable/cray-meds:1.20.0
    environment:
      - HSM_URL=http://cray-smd:27779/hsm/v2
      - "MEDS_OPTS=-sls http://cray-sls:8376/v1"
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=hms-creds # MEDS has a hardcode to prepend secret/ to this path.
      - VAULT_SKIP_VERIFY=true
      - MEDS_SYSLOG_TARG=localhost:514
      # - MEDS_SYSLOG_TARG_USE_IP=
      - MEDS_NTP_TARG=localhost:123
      # - MEDS_NTP_TARG_USE_IP=
      - MEDS_CA_URI=
      # - MEDS_NTP_TARG="time-hmn:123"
      # - MEDS_SYSLOG_TARG="rsyslog-aggregator.hmnlb:514"
      # - MEDS_NP_RF_URL=/redfish/v1/Managers/BMC/NetworkProtocol
      # - MEDS_ROOT_SSH_KEY=""
    volumes:
      - ./configs:/configs
    networks:
      - simulation
    restart: on-failure
    depends_on:
      - cray-sls-init
      - cray-sls
  #
  # REDS
  #
  cray-reds-etcd:
    image: artifactory.algol60.net/quay.io/coreos/etcd:v3.4.7
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://cray-reds-etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
    networks:
      - simulation
  cray-reds-vault-loader:
    image: artifactory.algol60.net/csm-docker/stable/cray-reds:1.24.0
    environment:
      CRAY_VAULT_AUTH_PATH: auth/token/create
      CRAY_VAULT_ROLE_FILE: configs/namespace
      CRAY_VAULT_JWT_FILE: configs/token
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: hms
      VAULT_KEYPATH: hms-creds
      VAULT_SKIP_VERIFY: "true"
      VAULT_ENABLED: "true"
    env_file:
      - configs/cray-reds-vault-loader.env
    command: vault_loader
    networks:
      - simulation
    profiles:
      - do-not-start-automatically
  cray-reds:
    image: artifactory.algol60.net/csm-docker/stable/cray-reds:1.24.0
    environment:
      - HSM_URL=http://cray-smd:27779/hsm/v2
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=hms-creds
      - VAULT_SKIP_VERIFY=true
      - VAULT_ENABLED=true
      - DATASTORE_URL=http://cray-reds-etcd:2379
      - SLS_ADDR=cray-sls:8376/v1
    networks:
      - simulation
    depends_on:
      - cray-sls
      # - cray-reds-init
  #
  # HMS Discovery job
  #
  hms-discovery:
    image: artifactory.algol60.net/csm-docker/stable/hms-discovery:1.14.0
    environment:
      SLS_URL: http://cray-sls:8376
      HSM_URL: http://cray-smd:27779
      CAPMC_URL: http://cray-capmc:27777
      CRAY_VAULT_AUTH_PATH: auth/token/create
      CRAY_VAULT_ROLE_FILE: configs/namespace
      CRAY_VAULT_JWT_FILE: configs/token
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: hms
      VAULT_BASE_PATH: secret
      SNMP_MODE: MOCK
      DISCOVER_MOUNTAIN: "true"
      DISCOVER_RIVER: "true"
      LOG_LEVEL: DEBUG
    volumes:
      - ./configs:/configs
    networks:
      - simulation
    profiles:
      - do-not-start-automatically
  #
  # CAPMC
  #
  cray-capmc:
    image: artifactory.algol60.net/csm-docker/stable/cray-capmc:3.1.0
    environment:
      - HSM_URL=http://cray-smd:27779
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=secret/hms-creds
      - VAULT_SKIP_VERIFY=true
      - VAULT_ENABLED=true
      - LOG_LEVEL=DEBUG
      - TRS_IMPLEMENTATION=LOCAL
      - HSMLOCK_ENABLED=true
      - PCS_URL=http://cray-power-control:28007
    ports:
      - "27777:27777"
    networks:
      - simulation
  #
  # PCS
  #
  cray-power-control-etcd:
    image: artifactory.algol60.net/quay.io/coreos/etcd:v3.4.7
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://cray-power-control-etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
    networks:
      - simulation
      # ports:
      # - 2379:2379
      # - 2380:2380
  cray-power-control:
    #TODO: update to stable version when completed and tagged
    image: artifactory.algol60.net/csm-docker/unstable/cray-power-control:0.0.9-20221215001720.53c83da
    environment:
      - SMS_SERVER=http://cray-smd:27779
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=secret/hms-creds
      - VAULT_SKIP_VERIFY=true
      - VAULT_ENABLED=true
      - LOG_LEVEL=TRACE
      - TRS_IMPLEMENTATION=LOCAL
      - HSMLOCK_ENABLED=true
      - STORAGE=ETCD
      - ETCD_HOST=cray-power-control-etcd
      - ETCD_PORT=2379
    ports:
      - "28007:28007"
    networks:
      - simulation
  #
  # BSS
  #
  cray-bss-etcd:
    image: artifactory.algol60.net/quay.io/coreos/etcd:v3.4.7
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://cray-bss-etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
    networks:
      - simulation
      # ports:
      # - 2379:2379
      # - 2380:2380
  cray-bss:
    image: artifactory.algol60.net/csm-docker/stable/cray-bss:1.22.0
    hostname: bss
    environment:
      - BSS_ADVERTISE_ADDRESS=http://0.0.0.0:8888
      - ETCD_HOST=cray-bss-etcd
      - ETCD_PORT=2379
      - HSM_URL=http://cray-smd:27779
      - NFD_URL=http://cray-hmnfd:28600
      - S3_ACCESS_KEY=foo
      - S3_SECRET_KEY=foo
      - S3_BUCKET=images
      - S3_ENDPOINT=s3
    networks:
      - simulation
    ports:
      - 27778:27778
  #
  # FAS
  #
  cray-fas-etcd:
    image: artifactory.algol60.net/quay.io/coreos/etcd:v3.4.7
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://cray-fas-etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
    # ports:
    #   - 2379:2379
    #   - 2380:2380
    networks:
      - simulation
  cray-fas:
    image: artifactory.algol60.net/csm-docker/stable/cray-firmware-action:1.24.0
    environment:
      - SMS_SERVER=http://cray-smd:27779
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      - S3_ENDPOINT=http://s3
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=hms-creds
      - VAULT_SKIP_VERIFY=true
      - VAULT_ENABLED=true
      - LOG_LEVEL=DEBUG
      - TRS_IMPLEMENTATION=LOCAL
      - HSMLOCK_ENABLED=true
      - STORAGE=ETCD
      - ETCD_HOST=etcd
      - ETCD_PORT=2379
    networks:
      - simulation
    ports:
      - "28800:28800"
    depends_on:
      - cray-fas-etcd
      - s3
      - cray-smd
      - cray-hms-hmcollector-ingress
      - cray-hms-hmcollector-poll
  #
  # Collector
  #
  cray-hms-hmcollector-ingress:
    image: artifactory.algol60.net/csm-docker/stable/hms-hmcollector:2.23.0
    environment:
      - LOG_LEVEL=TRACE
      - SM_URL=http://cray-smd:27779
      - VAULT_ADDR=http://vault:8200
      - VAULT_ENABLED=false
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=secret/hms-creds
      - CRAY_VAULT_JWT_FILE=configs/token
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - POLLING_ENABLED=false
      - POLLING_INTERVAL=30
      - RF_SUBSCRIBE_ENABLED=false
      - RF_STREAMING_ENABLED=false
      - REST_PORT=80
      - REST_ENABLED=true
      - HSM_REFRESH_INTERVAL=30
      - REST_URL=http://api-gateway-hmn/
    volumes:
      - ./configs/collector/kafka_brokers.json:/configs/kafka_brokers.json
      - ./configs/namespace:/configs/namespace
      - ./configs/token:/configs/token
    networks:
      - simulation
  cray-hms-hmcollector-poll:
    image: artifactory.algol60.net/csm-docker/stable/hms-hmcollector:2.23.0
    environment:
      - LOG_LEVEL=INFO
      - SM_URL=http://cray-smd:27779
      - VAULT_ADDR=http://vault:8200
      - VAULT_ENABLED=true
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=secret/hms-creds
      - CRAY_VAULT_JWT_FILE=configs/token
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - POLLING_ENABLED=true
      - POLLING_INTERVAL=30
      - RF_SUBSCRIBE_ENABLED=true
      - RF_STREAMING_ENABLED=true
      - REST_PORT=80
      - REST_ENABLED=true
      - HSM_REFRESH_INTERVAL=30
      - REST_URL=http://api-gateway-hmn/
    volumes:
      - ./configs/collector/kafka_brokers.json:/configs/kafka_brokers.json
      - ./configs/namespace:/configs/namespace
      - ./configs/token:/configs/token
    networks:
      - simulation
  #
  # Heart Beat Tracking Deamon
  #
  cray-hbtd-etcd:
    image: artifactory.algol60.net/quay.io/coreos/etcd:v3.4.7
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://cray-hbtd-etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
    # ports:
    #   - 2379:2379
    #   - 2380:2380
    networks:
      - simulation
  cray-hbtd:
    image: artifactory.algol60.net/csm-docker/stable/cray-hbtd:1.19.0
    environment:
      - SM_URL=http://cray-smd:27779/hsm/v2
      - USE_TELEMETRY=0
      # This is for SMA kafka
      # - TELEMETRY_HOST=kafka:9092:cray-hmsheartbeat-notifications
      - KV_URL=http://cray-hbtd-etcd:2379
    networks:
      - simulation
    ports:
      - "28500:28500"
  #
  # Fanout Deamon
  #
  cray-hmnfd-etcd:
    image: artifactory.algol60.net/quay.io/coreos/etcd:v3.4.7
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://cray-hmnfd-etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
    # ports:
    #   - 2379:2379
    #   - 2380:2380
    networks:
      - simulation
  cray-hmnfd:
    hostname: cray-hmnfd
    image: artifactory.algol60.net/csm-docker/stable/cray-hmnfd:1.18.0
    environment:
      - DEBUG=0
      - SM_URL=http://cray-smd:27779/hsm/v2
      - INBOUND_SCN_URL=http://cray-hmnfd:28600/hmi/v1/scn
      - SM_RETRIES=3
      - SM_TIMEOUT=10
      - PORT=28600
      - ETCD_HOST=cray-hmnfd-etcd
      - ETCD_PORT=2379
      # SMA telemetry
      - USE_TELEMETRY=
      - TELEMETRY_HOST=kafka:9092:cray-hmsstatechange-notifications
    networks:
      - simulation
    ports:
      - "28600:28600"
  #
  # SCSD
  #
  cray-scsd:
    image: artifactory.algol60.net/csm-docker/stable/cray-scsd:1.17.0
    environment:
      - SCSD_SMD_URL=http://cray-smd:27779/hsm/v2
      - SCSD_HTTP_LISTEN_PORT=25309
      - SCSD_LOCAL_MODE=true
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=secret/hms-creds
    networks:
      - simulation
    ports:
      - "25309:25309"
  # Nginx is being used as a standin for the Istio Ingress API gateway we use on
  # real systems.
  api-gateway:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./configs/nginx/conf.d:/etc/nginx/conf.d
      - ./configs/nginx/certs:/etc/nginx/certs
    networks:
      simulation:
        aliases:
          - api-gateway-hmn
